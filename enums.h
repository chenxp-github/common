#ifndef __ENUMS_H
#define __ENUMS_H

typedef enum{
    DIG_TYPE_ERR,
    DIG_TYPE_DEC,
    DIG_TYPE_HEX,
    DIG_TYPE_REAL,
}_DIG_TYPE;

typedef enum{
    REP_TYPE_ERR,
    REP_TYPE_CMPSB,
    REP_TYPE_CMPSD,
    REP_TYPE_CMPSW,
    REP_TYPE_MOVSB,
    REP_TYPE_MOVSD,
    REP_TYPE_MOVSW,
    REP_TYPE_SCASB,
    REP_TYPE_SCASD,
    REP_TYPE_SCASW,
    REP_TYPE_STOSB,
    REP_TYPE_STOSD,
    REP_TYPE_STOSW, 
};

typedef enum{
    OPND_TYPE_ERR,
    OPND_TYPE_IMMED,
    OPND_TYPE_REG,
    OPND_TYPE_SINGLE_BRACKET,
    OPND_TYPE_MULTI_BRACKET,
    OPND_TYPE_LABEL,
    OPND_TYPE_LABEL_EXP,
}_OpndType;

typedef enum{
    OPND_DATA_TYPE_ERR,
    OPND_DATA_TYPE_BYTE_PTR,
    OPND_DATA_TYPE_WORD_PTR,
    OPND_DATA_TYPE_DWORD_PTR,
    OPND_DATA_TYPE_QWORD_PTR,
}_OPND_DATA_TYPE;

typedef enum{
    OPER_ADC,
    OPER_ADD,
    OPER_AND,
    OPER_CALL,
    OPER_CDQ,
    OPER_CMP,
    OPER_CMPSB,
    OPER_CMPSD,
    OPER_CMPSW,
    OPER_DEC,
    OPER_DIV,
    OPER_F2XM1,
    OPER_FABS,
    OPER_FADD,
    OPER_FADDP,
    OPER_FBLD,
    OPER_FBST,
    OPER_FBSTP,
    OPER_FCHS,
    OPER_FCLEX,
    OPER_FCOM,
    OPER_FCOMP,
    OPER_FCOMPP,
    OPER_FCOS,
    OPER_FDECSTP,
    OPER_FDIV,
    OPER_FDIVP,
    OPER_FDIVR,
    OPER_FDIVRP,
    OPER_FFREE,
    OPER_FIADD,
    OPER_FICOM,
    OPER_FICOMP,
    OPER_FIDIV,
    OPER_FIDIVR,
    OPER_FILD,
    OPER_FIMUL,
    OPER_FINCSTP,
    OPER_FINIT,
    OPER_FIST,
    OPER_FISTP,
    OPER_FISUB,
    OPER_FISUBR,
    OPER_FLD,
    OPER_FLD1,
    OPER_FLDCW,
    OPER_FLDENV,
    OPER_FLDL2E,
    OPER_FLDL2T,
    OPER_FLDLG2,
    OPER_FLDLN2,
    OPER_FLDPI,
    OPER_FLDZ,
    OPER_FMUL,
    OPER_FMULP,
    OPER_FNINIT,
    OPER_FNOP,
    OPER_FNSAVE,
    OPER_FNSTCW,
    OPER_FNSTENV,
    OPER_FNSTSW,
    OPER_FPATAN,
    OPER_FPREM,
    OPER_FPREM1,
    OPER_FPTAN,
    OPER_FRNDINT,
    OPER_FRSTOR,
    OPER_FSAVE,
    OPER_FSCALE,
    OPER_FSETPM,
    OPER_FSIN,
    OPER_FSINCOS,
    OPER_FSQRT,
    OPER_FST,
    OPER_FSTCW,
    OPER_FSTENV,
    OPER_FSTP,
    OPER_FSTSW,
    OPER_FSUB,
    OPER_FSUBP,
    OPER_FSUBR,
    OPER_FSUBRP,
    OPER_FTST,
    OPER_FUCOM,
    OPER_FUCOMP,
    OPER_FUCOMPP,
    OPER_FWAIT,
    OPER_FXAM,
    OPER_FXCH,
    OPER_FXTRACT,
    OPER_FYL2X,
    OPER_FYL2XP1,
    OPER_IDIV,
    OPER_IMUL,
    OPER_INC,
    OPER_INT,
    OPER_JA,
    OPER_JAE,
    OPER_JB,
    OPER_JBE,
    OPER_JC,
    OPER_JCXZ,
    OPER_JE,
    OPER_JG,
    OPER_JGE,
    OPER_JL,
    OPER_JLE,
    OPER_JMP,
    OPER_JNA,
    OPER_JNAE,
    OPER_JNB,
    OPER_JNBE,
    OPER_JNC,
    OPER_JNE,
    OPER_JNG,
    OPER_JNGE,
    OPER_JNL,
    OPER_JNLE,
    OPER_JNO,
    OPER_JNP,
    OPER_JNS,
    OPER_JNZ,
    OPER_JO,
    OPER_JP,
    OPER_JPE,
    OPER_JPO,
    OPER_JS,
    OPER_JZ,
    OPER_LAHF,
    OPER_LEA,
    OPER_LEAVE,
    OPER_MOV,
    OPER_MOVSB,
    OPER_MOVSD,
    OPER_MOVSW,
    OPER_MOVSX,
    OPER_MUL,
    OPER_MYADD,
    OPER_MYDIV,
    OPER_MYMUL,
    OPER_MYSUB,
    OPER_NEG,
    OPER_NOT,
    OPER_NPAD,
    OPER_OR,
    OPER_POP,
    OPER_PUSH,
    OPER_REP,
    OPER_REPNE,
    OPER_RET,
    OPER_SAHF,
    OPER_SAR,
    OPER_SBB,
    OPER_SCASB,
    OPER_SCASD,
    OPER_SCASW,
    OPER_SETE,
    OPER_SETG,
    OPER_SETGE,
    OPER_SETL,
    OPER_SETLE,
    OPER_SETNE,
    OPER_SHL,
    OPER_SHR,
    OPER_STOSB,
    OPER_STOSD,
    OPER_STOSW,
    OPER_SUB,
    OPER_TEST,
    OPER_WAIT,
    OPER_XOR,
    OPER_REPE,
    OPER_REPZ,
}_OperNum;

typedef enum{
    REG_EAX,
    REG_EBX,
    REG_ECX,
    REG_EDX,
    REG_EEX,
    REG_ESI,
    REG_ESP,
    REG_EDI,
    REG_EBP,
    REG_EIP,
    REG_AL,
    REG_BL,
    REG_CL,
    REG_DL,
    REG_EL,
    REG_AH,
    REG_BH,
    REG_CH,
    REG_DH,
    REG_EH,
    REG_AX,
    REG_BX,
    REG_CX,
    REG_DX,
    REG_EX,
    REG_DI,
    REG_SI,
    REG_ST0,
    REG_ST1,
    REG_ST2,
    REG_ST3,
    REG_ST4,
    REG_ST5,
    REG_ST6,
    REG_ST7,
    REG_ST8,
    REG_ST9,
    REG_R0,
    REG_R1,
    REG_R2,
    REG_R3,
    REG_R4,
    REG_R5,
    REG_R6,
    REG_R7,
    REG_R8,
    REG_R9,
    REG_R10,
    REG_FLAG,
}_RegNum;

#endif

